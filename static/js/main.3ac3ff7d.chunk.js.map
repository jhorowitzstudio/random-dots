{"version":3,"sources":["constants/defaults.js","actions/index.js","store/store.js","reducer/index.js","components/Interface/DotDimensions/DotSelectorAndForms/styles/index.js","components/Interface/DotDimensions/DotSelectorAndForms/index.js","components/Interface/DotDimensions/index.js","components/Interface/CanvasDimensions/CanvasForm/styles/index.js","components/Interface/CanvasDimensions/CanvasForm/index.js","components/Interface/CanvasDimensions/index.js","components/Common/Select/index.js","components/Interface/ColorPickersContainer/ColorModeSelector/index.js","components/Interface/ColorPickersContainer/ColorHueModeSelector/index.js","components/Interface/ColorPickersContainer/ColorPickersOptions/ColorPicker/index.js","components/Interface/ColorPickersContainer/ColorPickersOptions/ColorSlide/index.js","components/Interface/ColorPickersContainer/ColorPickersOptions/CustomColorPicker/index.js","components/Interface/ColorPickersContainer/ColorPickersOptions/index.js","components/Interface/ColorPickersContainer/index.js","components/Interface/NumberOfDots/styles/index.js","components/Interface/NumberOfDots/NumberOfDots.js","components/Interface/NumberOfDots/index.js","components/Interface/index.js","components/CanvasContainer/Canvas/index.js","helpers/dotLayer.js","components/CanvasContainer/index.js","App.js","serviceWorker.js","index.js"],"names":["colorModes","rgb","lab","lrgb","hsl","lch","colorHueModes","two-point scale","totally-random RGB","controlled-random HSL","choose color from multiple","initialState","dotRadiusMin","dotRadiusMax","numberOfDots","canvasHeight","canvasWidth","lineThickness","dotDimensionsPopup","canvasDimensionsPopup","firstColor","secondColor","colorArray","saturation","lightness","colorHueMode","colorMode","TOGGLE_CANVAS_POPUP","SET_DOT_DIMENSIONS","SET_NUMBER_OF_DOTS","SET_CANVAS_DIMENSIONS","SET_COLOR","SET_HSL","SAVE_IMAGE","SET_COLOR_MODE","SET_COLOR_HUE_MODE","ADD_TO_COLOR_ARRAY","REMOVE_FROM_COLOR_ARRAY","EDIT_COLOR_IN_ARRAY","setCanvasDimensions","dimensions","type","payload","createStore","state","arguments","length","undefined","action","Object","objectSpread","height","width","defineProperty","name","color","value","concat","toConsumableArray","message","slice","index","window","__REDUX_DEVTOOLS_EXTENSION__","StyledForm","styled","form","_templateObject","_default","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","_event$target","target","setState","prevState","formControls","submitForm","preventDefault","dispatch","parseInt","alert","_ref","setDotDimensions","_this$props","react_default","a","createElement","onSubmit","min","step","onChange","Component","connect","DotSelectorAndForms_default","styles_templateObject","handleSelectChange","styles_StyledForm","CanvasForm_default","styles","select","margin","Select","options","disabled","_props$custom","custom","style","keys","map","key","React","container","marginBottom","marginRight","handleOnChangeComplete","colorName","_ref3","setColor","hex","header","lib","onChangeComplete","Handle","Slider","handle","dragging","restProps","objectWithoutProperties","rc_tooltip_es","prefixCls","overlay","visible","placement","assign","valueName","_ref4","setHSL","_this$props2","rc_slider_es","onAfterChange","defaultValue","max","handleClick","_this$state","displayColorPicker","backgroundColor","_ref6","editColorInArray","handleClose","borderRadius","background","swatch","padding","boxShadow","display","cursor","popover","position","zIndex","cover","top","right","bottom","left","onClick","ColorPickersContainer","removeHandler","_ref5","removeFromColorArray","handleAdd","random","_this2","ColorPicker_Component","ColorSlide_default","maxWidth","gridTemplateColumns","gridColumnGap","gridRowGap","CustomColorPicker_default","_ref2","ColorHueModeSelector_Component","ColorModeSelector_Component","ColorPickersOptions","NumberOfDots_styles_templateObject","setNumberOfDots","console","log","NumberOfDots_styles_StyledForm","NumberOfDots_default","Interface","NumberOfDots","Interface_DotDimensions","Interface_CanvasDimensions","Interface_ColorPickersContainer","save","id","_","Math","preserveAspectRatio","scale","coordinates","chroma","mode","hue","floor","i","x","y","fill","push","dotLayer","className","r","cx","cy","svg","document","getElementById","serializer","XMLSerializer","xmlserializer","svgBlob","Blob","serializeToString","url","URL","createObjectURL","link","href","download","innerHTML","body","addEventListener","appendChild","Canvas_default","App","CanvasContainer","Boolean","location","hostname","match","ReactDOM","render","es","store","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"yOACaA,EAAa,CACxBC,IAAK,GACLC,IAAK,GACLC,KAAM,GACNC,IAAK,GACLC,IAAK,IAGMC,EAAgB,CAC3BC,kBAAmB,GACnBC,qBAAsB,GACtBC,wBAAyB,GACzBC,6BAA8B,IAGnBC,EAAe,CAC1BC,aAAc,EACdC,aAAc,GACdC,aAAc,IACdC,aAAc,IACdC,YAAa,IACbC,cAAe,EACfC,oBAAoB,EACpBC,uBAAuB,EACvBC,WAAY,UACZC,YAAa,UACbC,WAAY,GACZC,WAAY,GACZC,UAAW,IACXC,aAAc,kBACdC,UAAW,OC/BAC,EAAsB,sBACtBC,EAAqB,qBACrBC,EAAqB,qBACrBC,EAAwB,wBACxBC,EAAY,YACZC,EAAU,UACVC,EAAa,aACbC,EAAiB,iBACjBC,EAAqB,qBACrBC,EAAqB,qBACrBC,EAA0B,0BAC1BC,EAAsB,sBAsB5B,SAASC,EAAoBC,GAClC,MAAO,CACLC,KAAMX,EACNY,QAASF,GCjCEG,kBCaA,WAA+C,IAA9BC,EAA8BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtBlC,EAAcqC,EAAQH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC5D,OAAQC,EAAOP,MACb,KAAKd,EACH,OAAOsB,OAAAC,EAAA,EAAAD,CAAA,GAAKL,EAAZ,CAAmBzB,uBAAwByB,EAAMzB,wBACnD,KAAKS,EACH,OAAOqB,OAAAC,EAAA,EAAAD,CAAA,GACFL,EADL,CAEEhC,aAAcoC,EAAON,QAAQ9B,cAAgBgC,EAAMhC,aACnDC,aAAcmC,EAAON,QAAQ7B,cAAgB+B,EAAM/B,eAEvD,KAAKgB,EACH,OAAOoB,OAAAC,EAAA,EAAAD,CAAA,GACFL,EADL,CAEE9B,aAAckC,EAAON,QAAQ5B,cAAgB8B,EAAM9B,eAEvD,KAAKgB,EACH,OAAOmB,OAAAC,EAAA,EAAAD,CAAA,GACFL,EADL,CAEE7B,aAAciC,EAAON,QAAQS,QAAUP,EAAM7B,aAC7CC,YAAagC,EAAON,QAAQU,OAASR,EAAM5B,cAE/C,KAAKe,EACH,OAAOkB,OAAAC,EAAA,EAAAD,CAAA,GAAKL,EAAZK,OAAAI,EAAA,EAAAJ,CAAA,GAAoBD,EAAON,QAAQY,KAAON,EAAON,QAAQa,QAC3D,KAAKvB,EACH,OAAOiB,OAAAC,EAAA,EAAAD,CAAA,GAAKL,EAAZK,OAAAI,EAAA,EAAAJ,CAAA,GAAoBD,EAAON,QAAQY,KAAON,EAAON,QAAQc,QAC3D,KAAKtB,EACH,OAAOe,OAAAC,EAAA,EAAAD,CAAA,GAAKL,EAAZ,CAAmBlB,UAAWsB,EAAON,UACvC,KAAKP,EACH,OAAOc,OAAAC,EAAA,EAAAD,CAAA,GAAKL,EAAZ,CAAmBnB,aAAcuB,EAAON,UAC1C,KAAKT,EACH,OAAOW,EACT,KAAKR,EACH,OAAOa,OAAAC,EAAA,EAAAD,CAAA,GAAKL,EAAZ,CAAmBtB,WAAU,GAAAmC,OAAAR,OAAAS,EAAA,EAAAT,CAAML,EAAMtB,YAAZ,CAAwB0B,EAAON,YAC9D,KAAKL,EACH,OAAOY,OAAAC,EAAA,EAAAD,CAAA,GACFL,EADL,CAEEe,QAASX,EAAON,QAChBpB,WAAU,GAAAmC,OAAAR,OAAAS,EAAA,EAAAT,CACLL,EAAMtB,WAAWsC,MAAM,EAAGZ,EAAON,QAAQmB,QADpCZ,OAAAS,EAAA,EAAAT,CAELL,EAAMtB,WAAWsC,MAAMZ,EAAON,QAAQmB,MAAQ,OAGvD,KAAKvB,EACH,OAAOW,OAAAC,EAAA,EAAAD,CAAA,GACFL,EADL,CAEEtB,WAAU,GAAAmC,OAAAR,OAAAS,EAAA,EAAAT,CACLL,EAAMtB,WAAWsC,MAAM,EAAGZ,EAAON,QAAQmB,QADpC,CAERb,EAAON,QAAQa,OAFPN,OAAAS,EAAA,EAAAT,CAGLL,EAAMtB,WAAWsC,MAAMZ,EAAON,QAAQmB,MAAQ,OAGvD,QACE,OAAOjB,ID/DXkB,OAAOC,8BAAgCD,OAAOC,sgBEFzC,IAAMC,EAAaC,IAAOC,KAAVC,mBCErB,SAAAC,EAAYC,GAAO,IAAAC,EAAArB,OAAAsB,EAAA,EAAAtB,CAAAuB,KAAAJ,IACjBE,EAAArB,OAAAwB,EAAA,EAAAxB,CAAAuB,KAAAvB,OAAAyB,EAAA,EAAAzB,CAAAmB,GAAAO,KAAAH,KAAMH,KAURO,aAAe,SAAAC,GAAS,IAAAC,EACED,EAAME,OAAtBzB,EADcwB,EACdxB,KAAME,EADQsB,EACRtB,MACdc,EAAKU,SAAS,SAAAC,GACZ,MAAO,CACLC,aAAajC,OAAAC,EAAA,EAAAD,CAAA,GACRgC,EAAUC,aADHjC,OAAAI,EAAA,EAAAJ,CAAA,GAETK,EAFSL,OAAAC,EAAA,EAAAD,CAAA,GAGLgC,EAAUC,aAAa5B,GAHlB,CAIRE,gBAnBSc,EA0BnBa,WAAa,SAAAN,GACXA,EAAMO,iBADc,IAEZC,EAAaf,EAAKD,MAAlBgB,SACAH,EAAiBZ,EAAK1B,MAAtBsC,aACFtE,EAAe0E,SAASJ,EAAatE,aAAa4C,MAAO,IACzD3C,EAAeyE,SAASJ,EAAarE,aAAa2C,MAAO,IAC3D5C,EAAeC,GAEjBiD,OAAOyB,MACL,+DAEJF,EJvBG,SAAAG,GAA0D,IAA9B5E,EAA8B4E,EAA9B5E,aAAcC,EAAgB2E,EAAhB3E,aAC/C,MAAO,CACL4B,KAAMb,EACNc,QAAS,CAAE9B,eAAcC,iBIoBhB4E,CAAiB,CAAE5E,eAAcD,mBArCzB,IAAA8E,EAEsBpB,EAAKD,MAApCzD,EAFS8E,EAET9E,aAAcC,EAFL6E,EAEK7E,aAFL,OAGjByD,EAAK1B,MAAQ,CACXsC,aAAc,CACZtE,aAAc,CAAE4C,MAAO5C,GACvBC,aAAc,CAAE2C,MAAO3C,KANVyD,wEAwCV,IACCY,EAAiBV,KAAK5B,MAAtBsC,aACR,OACES,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAC7B,EAAD,CAAY8B,SAAUtB,KAAKW,YACzBQ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,SACEpD,KAAK,SACLsD,IAAI,IACJC,KAAK,IACL1C,KAAK,eACLE,MAAO0B,EAAatE,aAAa4C,MACjCyC,SAAUzB,KAAKI,gBAGnBe,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,SACEpD,KAAK,SACLsD,IAAI,IACJC,KAAK,IACL1C,KAAK,eACLE,MAAO0B,EAAarE,aAAa2C,MACjCyC,SAAUzB,KAAKI,gBAGnBe,EAAAC,EAAAC,cAAA,SAAOpD,KAAK,SAASe,MAAM,oBArER0C,aCOdC,cALS,SAAAX,GAAA,MAAqC,CAC3D5E,aADsB4E,EAAG5E,aAEzBC,aAFsB2E,EAAiB3E,eAK1BsF,CAPO,SAAA9B,GAAK,OAAIsB,EAAAC,EAAAC,cAACO,EAAuB/B,0aCDhD,IAAML,EAAaC,IAAOC,KAAVmC,mBCErB,SAAAjC,EAAYC,GAAO,IAAAC,EAAArB,OAAAsB,EAAA,EAAAtB,CAAAuB,KAAAJ,IACjBE,EAAArB,OAAAwB,EAAA,EAAAxB,CAAAuB,KAAAvB,OAAAyB,EAAA,EAAAzB,CAAAmB,GAAAO,KAAAH,KAAMH,KAURiC,mBAAqB,SAAAzB,IAGnBQ,EAFqBf,EAAKD,MAAlBgB,UAEC9C,EADSsC,EAAME,OAAhBvB,SAbSc,EAiBnBM,aAAe,SAAAC,GAAS,IAAAC,EACED,EAAME,OAAtBzB,EADcwB,EACdxB,KAAME,EADQsB,EACRtB,MACdc,EAAKU,SAAS,SAAAC,GACZ,MAAO,CACLC,aAAajC,OAAAC,EAAA,EAAAD,CAAA,GACRgC,EAAUC,aADHjC,OAAAI,EAAA,EAAAJ,CAAA,GAETK,EAFSL,OAAAC,EAAA,EAAAD,CAAA,GAGLgC,EAAUC,aAAa5B,GAHlB,CAIRE,gBAzBSc,EAiCnBa,WAAa,SAAAN,GACXA,EAAMO,iBADc,IAEZC,EAAaf,EAAKD,MAAlBgB,SACAH,EAAiBZ,EAAK1B,MAAtBsC,aAGRG,EAAS9C,EAAoB,CAAEY,OAFhBmC,SAASJ,EAAanE,aAAayC,MAAO,IAElBJ,MADzBkC,SAASJ,EAAalE,YAAYwC,MAAO,QAtCtC,IAAAkC,EAEqBpB,EAAKD,MAAnCtD,EAFS2E,EAET3E,aAAcC,EAFL0E,EAEK1E,YAFL,OAGjBsD,EAAK1B,MAAQ,CACXsC,aAAc,CACZnE,aAAc,CAAEyC,MAAOzC,GACvBC,YAAa,CAAEwC,MAAOxC,KANTsD,wEA0CV,IACCY,EAAiBV,KAAK5B,MAAtBsC,aACR,OACES,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAACU,EAAD,CAAYT,SAAUtB,KAAKW,YACzBQ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,SACEpD,KAAK,SACLsD,IAAI,IACJC,KAAK,IACL1C,KAAK,eACLE,MAAO0B,EAAanE,aAAayC,MACjCyC,SAAUzB,KAAKI,gBAGnBe,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,SACEpD,KAAK,SACLsD,IAAI,IACJC,KAAK,IACL1C,KAAK,cACLE,MAAO0B,EAAalE,YAAYwC,MAChCyC,SAAUzB,KAAKI,gBAGnBe,EAAAC,EAAAC,cAAA,SAAOpD,KAAK,SAASe,MAAM,oBAvER0C,aCUdC,cARS,SAAAX,GAAA,MAGjB,CACLzE,aAJsByE,EACtBzE,aAIAC,YALsBwE,EAEtBxE,cAMamF,CAVU,SAAA9B,GAAK,OAAIsB,EAAAC,EAAAC,cAACW,EAAenC,KCF5CoC,EAAS,CACbC,OAAQ,CACNC,OAAQ,KAIGC,EAAA,SAAAvC,GAAS,IACdO,EAA2DP,EAA3DO,aAAcpB,EAA6Ca,EAA7Cb,MAAOqD,EAAsCxC,EAAtCwC,QAASC,EAA6BzC,EAA7ByC,SADhBC,EAC6C1C,EAAnB2C,cAD1B,IAAAD,KAEtB,OACEpB,EAAAC,EAAAC,cAAA,UACEoB,MAAOR,EAAOC,OACdI,SAAUA,EACVtD,MAAOA,EACPyC,SAAUrB,GAET3B,OAAOiE,KAAKL,GAASM,IAAI,SAAA7D,GAAI,OAC5BqC,EAAAC,EAAAC,cAAA,UAAQuB,IAAK9D,EAAME,MAAOF,GACvBA,KAGJ0D,GACCrB,EAAAC,EAAAC,cAAA,UAAQuB,IAAI,SAAS5D,MAAM,aAA3B,eClBa0C,6MACnBI,mBAAqB,SAAAzB,GAAS,IACpBQ,EAAaf,EAAKD,MAAlBgB,SACA7B,EAAUqB,EAAME,OAAhBvB,MACR6B,EV8CK,CACL5C,KAAMP,EACNQ,QUhDsBc,6EAGf,IAAAkC,EAC6BlB,KAAKH,MAAjC3C,EADDgE,EACChE,UAAWD,EADZiE,EACYjE,aACnB,OACEkE,EAAAC,EAAAC,cAAA,gCAEEF,EAAAC,EAAAC,cAACe,EAAD,CACEE,SAA2B,oBAAjBrF,EACVmD,aAAcJ,KAAK8B,mBACnB9C,MAAO9B,EACPmF,QAAS7G,YAhBoBqH,IAAMnB,WCAvCO,EAAS,CACba,UAAW,CACTC,aAAc,KAIGrB,6MACnBI,mBAAqB,SAAAzB,GAAS,IACpBQ,EAAaf,EAAKD,MAAlBgB,SACA7B,EAAUqB,EAAME,OAAhBvB,MACR6B,EX+CK,CACL5C,KAAMN,EACNO,QWjDyBc,6EAGlB,IACC/B,EAAiB+C,KAAKH,MAAtB5C,aACR,OACEkE,EAAAC,EAAAC,cAAA,OAAKoB,MAAOR,EAAOa,WAAnB,aAEE3B,EAAAC,EAAAC,cAACe,EAAD,CACEhC,aAAcJ,KAAK8B,mBACnB9C,MAAO/B,EACPoF,QAASvG,YAfoB+G,IAAMnB,oCCPvCO,EAAS,CACba,UAAW,CAAEE,YAAa,KAGPtB,6MACnBuB,uBAAyB,SAAAlE,GAAS,IAAAmC,EACApB,EAAKD,MAA7BqD,EADwBhC,EACxBgC,WACRrC,EAFgCK,EACbL,UZ8BhB,SAAAsC,GAAmC,IAAfrE,EAAeqE,EAAfrE,KAAMC,EAASoE,EAATpE,MAC/B,MAAO,CACLd,KAAMV,EACNW,QAAS,CAAEY,OAAMC,UYhCRqE,CAAS,CAAEtE,KAAMoE,EAAWnE,MAAOA,EAAMsE,gFAKlD,IAAMtE,EAAQiB,KAAKH,MAAMG,KAAKH,MAAMqD,WAC5BI,EAAWtD,KAAKH,MAAhByD,OACR,OACEnC,EAAAC,EAAAC,cAAA,OAAKoB,MAAOR,EAAOa,WACjB3B,EAAAC,EAAAC,cAACkC,EAAA,gBAAD,CACED,OAAQA,EACRvE,MAAOA,EACPyE,iBAAkBxD,KAAKiD,iCAfMJ,IAAMnB,wDCArC+B,GAAWC,KAAXD,OAEFE,GAAS,SAAA9D,GAAS,IACdb,EAAyCa,EAAzCb,MAAO4E,EAAkC/D,EAAlC+D,SAAUvE,EAAwBQ,EAAxBR,MAAUwE,EADbpF,OAAAqF,GAAA,EAAArF,CAC2BoB,EAD3B,8BAEtB,OACEsB,EAAAC,EAAAC,cAAC0C,GAAA,EAAD,CACEC,UAAU,oBACVC,QAASjF,EACTkF,QAASN,EACTO,UAAU,MACVvB,IAAKvD,GAEL8B,EAAAC,EAAAC,cAACoC,GAADhF,OAAA2F,OAAA,CAAQpF,MAAOA,GAAW6E,oNAM9BZ,uBAAyB,SAAAjE,GAAS,IAAAkC,EACApB,EAAKD,MAA7BwE,EADwBnD,EACxBmD,WACRxD,EAFgCK,EACbL,UboBhB,SAAAyD,GAAiC,IAAfxF,EAAewF,EAAfxF,KAAME,EAASsF,EAATtF,MAC7B,MAAO,CACLf,KAAMT,EACNU,QAAS,CAAEY,OAAME,UatBRuF,CAAO,CAAEzF,KAAMuF,EAAWrF,MAAOA,EAAQ,gFAKlD,IAFOwF,EAGsBxE,KAAKH,MAA1BwE,EAHDG,EAGCH,UAAWrF,EAHZwF,EAGYxF,MACnB,OACEmC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAKgD,GACLlD,EAAAC,EAAAC,cAAA,OAAKoB,MALY,CAAE7D,MAAO,IAAKuD,OAAQ,KAMrChB,EAAAC,EAAAC,cAACoD,GAAA,EAAD,CACEd,OAAQA,GACRe,cAAe1E,KAAKiD,uBACpB0B,aAAsB,IAAR3F,EACduC,IAAK,EACLqD,IAAK,eAnBY/B,IAAMnB,0BCpBjC,SAAA9B,EAAYC,GAAO,IAAAC,EAAA,OAAArB,OAAAsB,EAAA,EAAAtB,CAAAuB,KAAAJ,IACjBE,EAAArB,OAAAwB,EAAA,EAAAxB,CAAAuB,KAAAvB,OAAAyB,EAAA,EAAAzB,CAAAmB,GAAAO,KAAAH,KAAMH,KAYRgF,YAAc,WAAM,IAAAC,EAC8BhF,EAAK1B,MAA7C2G,EADUD,EACVC,mBAAoBC,EADVF,EACUE,gBAC5B,GAAID,EAAoB,KAAA7D,EACMpB,EAAKD,MAAzBR,EADc6B,EACd7B,OACRwB,EAFsBK,EACPL,UdiEd,SAAAoE,GAA4C,IAAhB5F,EAAgB4F,EAAhB5F,MAAON,EAASkG,EAATlG,MACxC,MAAO,CACLd,KAAMH,EACNI,QAAS,CAAEmB,QAAON,UcnEPmG,CAAiB,CAAE7F,QAAON,MAAOiG,KAE5ClF,EAAKU,SAAS,SAAAC,GAAS,MAAK,CAC1BsE,oBAAqBtE,EAAUsE,uBApBhBjF,EAwBnBqF,YAAc,aAxBKrF,EA0BnBmD,uBAAyB,SAAAlE,GACvBe,EAAKU,SAAS,CAAEwE,gBAAiBjG,EAAMsE,OAzBvCvD,EAAK1B,MAAQ,CACX2G,oBAAoB,EACpBC,gBAAiB,IAJFlF,mFAQC,IACVf,EAAUiB,KAAKH,MAAfd,MACRiB,KAAKQ,SAAS,CAAEwE,gBAAiBjG,qCAoB1B,IACCiG,EAAoBhF,KAAK5B,MAAzB4G,gBACF/C,EAAS,CACblD,MAAO,CACLH,MAAO,OACPD,OAAQ,OACRyG,aAAc,MACdC,WAAYL,GAEdM,OAAQ,CACNC,QAAS,MACTF,WAAY,OACZD,aAAc,MACdI,UAAW,2BACXC,QAAS,eACTC,OAAQ,WAEVC,QAAS,CACPC,SAAU,WACVC,OAAQ,KAEVC,MAAO,CACLF,SAAU,QACVG,IAAK,MACLC,MAAO,MACPC,OAAQ,MACRC,KAAM,QAGFnB,EAAuB/E,KAAK5B,MAA5B2G,mBAER,OACE5D,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQpD,KAAK,SAASwE,MAAOR,EAAOqD,OAAQa,QAASnG,KAAK6E,aACxD1D,EAAAC,EAAAC,cAAA,OAAKoB,MAAOR,EAAOlD,SAEpBgG,EACC5D,EAAAC,EAAAC,cAAA,OAAKoB,MAAOR,EAAO0D,SACjBxE,EAAAC,EAAAC,cAAA,UACEpD,KAAK,SACLwE,MAAOR,EAAO6D,MACdK,QAASnG,KAAKmF,cAEhBhE,EAAAC,EAAAC,cAACkC,EAAA,aAAD,CACExE,MAAOiG,EACPxB,iBAAkBxD,KAAKiD,0BAGzB,aA/EiBJ,IAAMnB,WCM7B0E,8MACJC,cAAgB,SAAArF,GAAe,IAAZ3B,EAAY2B,EAAZ3B,OAEjBwB,EADqBf,EAAKD,MAAlBgB,UfmEL,SAAAyF,GAAyC,IAATjH,EAASiH,EAATjH,MACrC,MAAO,CACLpB,KAAMJ,EACNK,QAAS,CAAEmB,UerEFkH,CAAqB,CAAElH,cAGlCmH,UAAY,WAAM,IfwDYzH,GetD5B8B,EADqBf,EAAKD,MAAlBgB,WfuDoB9B,EetDH0H,mBfuDpB,CACLxI,KAAML,EACNM,QAASa,8EetDF,IAAA2H,EAAA1G,KAAAkB,EACqDlB,KAAKH,MAAzD5C,EADDiE,EACCjE,aAAcF,EADfmE,EACenE,WAAYC,EAD3BkE,EAC2BlE,UAAWF,EADtCoE,EACsCpE,WAC7C,OACEqE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,oBACkB,oBAAjBpE,GACCkE,EAAAC,EAAAC,cAAA,OAAKoB,MAAO,CAAEgD,QAAS,SACrBtE,EAAAC,EAAAC,cAACsF,EAADlI,OAAA2F,OAAA,CACElB,UAAU,aACVI,OAAO,eACHtD,KAAKH,QAEXsB,EAAAC,EAAAC,cAACsF,EAADlI,OAAA2F,OAAA,CACElB,UAAU,cACVI,OAAO,gBACHtD,KAAKH,SAIG,uBAAjB5C,GACCkE,EAAAC,EAAAC,cAAA,oEAEgB,0BAAjBpE,GACCkE,EAAAC,EAAAC,cAAA,OAAKoB,MAAO,CAAEgD,QAAS,SACrBtE,EAAAC,EAAAC,cAACuF,GAADnI,OAAA2F,OAAA,CACEpF,MAAOjC,EACPsH,UAAU,cACNrE,KAAKH,QAEXsB,EAAAC,EAAAC,cAACuF,GAADnI,OAAA2F,OAAA,CACEpF,MAAOhC,EACPqH,UAAU,aACNrE,KAAKH,SAIG,+BAAjB5C,GACCkE,EAAAC,EAAAC,cAAA,OAAKoB,MAAO,CAAEoE,SAAU,MACtB1F,EAAAC,EAAAC,cAAA,gEACAF,EAAAC,EAAAC,cAAA,OACEoB,MAAO,CACLgD,QAAS,OACTqB,oBAAqB,uCACrBC,cAAe,EACfC,WAAY,KAGd7F,EAAAC,EAAAC,cAAA,UACEoB,MAAO,CAAEO,YAAa,EAAGoC,aAAc,GACvCnH,KAAK,SACLkI,QAASnG,KAAKwG,WAHhB,aAOC1J,EAAW6F,IAAI,SAAC5D,EAAOM,GACtB,OACE8B,EAAAC,EAAAC,cAAA,OAAKuB,IAAKvD,EAAQN,GAChBoC,EAAAC,EAAAC,cAAC4F,GAADxI,OAAA2F,OAAA,CACE/E,MAAOA,EACPuD,IAAKvD,EAAQN,EACbA,MAAOA,GACH2H,EAAK7G,QAEXsB,EAAAC,EAAAC,cAAA,UACEpD,KAAK,SACLkI,QAAS,kBAAMO,EAAKL,cAAc,CAAEhH,YAFtC,uBA1EgBwD,IAAMnB,WAuG3BC,eAZS,SAAAuF,GAAA,MAKjB,CACLtK,WANsBsK,EACtBtK,WAMAC,YAPsBqK,EAEtBrK,YAMAK,UARsBgK,EAGtBhK,UAMAD,aATsBiK,EAItBjK,eAQa0E,CAAyByE,IChFzBzE,eAlBS,SAAAX,GAAA,MAQjB,CACLpE,WATsBoE,EACtBpE,WASAC,YAVsBmE,EAEtBnE,YASAE,WAXsBiE,EAGtBjE,WASAC,UAZsBgE,EAItBhE,UASAF,WAbsBkE,EAKtBlE,WASAI,UAdsB8D,EAMtB9D,UASAD,aAfsB+D,EAOtB/D,eAWa0E,CA3Be,SAAA9B,GAAK,OACjCsB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAC8F,EAAyBtH,GAC1BsB,EAAAC,EAAAC,cAAC+F,EAAsBvH,GACvBsB,EAAAC,EAAAC,cAACgG,GAAwBxH,6aCRtB,IAAML,GAAaC,IAAOC,KAAV4H,qBCErB,SAAA1H,EAAYC,GAAO,IAAAC,EAAArB,OAAAsB,EAAA,EAAAtB,CAAAuB,KAAAJ,IACjBE,EAAArB,OAAAwB,EAAA,EAAAxB,CAAAuB,KAAAvB,OAAAyB,EAAA,EAAAzB,CAAAmB,GAAAO,KAAAH,KAAMH,KAMRO,aAAe,SAAAC,GAAS,IACdrB,EAAUqB,EAAME,OAAhBvB,MACRc,EAAKU,SAAS,CAAElE,aAAc0C,KATbc,EAYnBa,WAAa,SAAAN,GACXA,EAAMO,iBADc,IAEZC,EAAaf,EAAKD,MAAlBgB,SACAvE,EAAiBwD,EAAK1B,MAAtB9B,aACRuE,ElBKG,SAAAqG,GAA2C,IAAhB5K,EAAgB4K,EAAhB5K,aAChC,MAAO,CACL2B,KAAMZ,EACNa,QAAS,CAAE5B,iBkBRFiL,CAAgB,CAAEjL,aAAcwE,SAASxE,EAAc,QAhB/C,IAETA,EAAiBwD,EAAKD,MAAtBvD,aAFS,OAGjBkL,QAAQC,IAAInL,GACZwD,EAAK1B,MAAQ,CAAE9B,gBAJEwD,wEAmBV,IACCxD,EAAiB0D,KAAK5B,MAAtB9B,aACR,OACE6E,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAACqG,GAAD,CAAYpG,SAAUtB,KAAKW,YACzBQ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,SACEpD,KAAK,SACLsD,IAAI,IACJC,KAAK,IACL1C,KAAK,eACLE,MAAO1C,EACPmF,SAAUzB,KAAKI,gBAGnBe,EAAAC,EAAAC,cAAA,SAAOpD,KAAK,SAASe,MAAM,oBArCR0C,aCMdC,eAJS,SAAAX,GAAA,MAAuB,CAC7C1E,aADsB0E,EAAG1E,eAIZqF,CANe,SAAA9B,GAAK,OAAIsB,EAAAC,EAAAC,cAACsG,GAAiB9H,KCE1C+H,GAAA,kBACbzG,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACwG,GAAD,MACA1G,EAAAC,EAAAC,cAACyG,EAAD,MACA3G,EAAAC,EAAAC,cAAC0G,EAAD,MACA5G,EAAAC,EAAAC,cAAC2G,GAAD,qNCNO,IAAAlI,EAAAE,KAAAkB,EAeHlB,KAAKH,MAbPxD,EAFK6E,EAEL7E,aACAD,EAHK8E,EAGL9E,aACAE,EAJK4E,EAIL5E,aACAM,EALKsE,EAKLtE,WACAG,EANKmE,EAMLnE,WACAD,EAPKoE,EAOLpE,WACAE,EARKkE,EAQLlE,UACAH,EATKqE,EASLrE,YACAK,EAVKgE,EAULhE,UACAX,EAXK2E,EAWL3E,aACAC,EAZK0E,EAYL1E,YACAS,EAbKiE,EAaLjE,aACAgL,EAdK/G,EAcL+G,KAEF,OACE9G,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQpD,KAAK,SAASkI,QAAS8B,GAA/B,0BAGA9G,EAAAC,EAAAC,cAAA,QAAM6G,GAAG,iBACT/G,EAAAC,EAAAC,cAAA,OAAK6G,GAAG,SACN/G,EAAAC,EAAAC,cAAA,sCAC6B7E,EAD7B,MAC6CD,EAD7C,WAGA4E,EAAAC,EAAAC,cAAA,8BACqBjF,EADrB,WACsCC,EADtC,OAGA8E,EAAAC,EAAAC,cAAA,UACE6G,GAAG,UACHzF,MAAO,CAAEM,aAAc,IACvB9E,KAAK,SACLkI,QAAS,kBAAMrG,EAAKU,SAAS,CAAE2H,EAAGC,KAAK3B,aAJzC,YASFtF,EAAAC,EAAAC,cAAA,OACE6G,GAAG,UACHtJ,MAAOpC,EACPmC,OAAQpC,EACR8L,oBAAoB,iBC7Cf,SAAArH,GAWZ,IAEGsH,EAZJ/L,EAUCyE,EAVDzE,aACAC,EASCwE,EATDxE,YACAF,EAQC0E,EARD1E,aACAM,EAOCoE,EAPDpE,WACAC,EAMCmE,EANDnE,YACAC,EAKCkE,EALDlE,WACAC,EAICiE,EAJDjE,WACAC,EAGCgE,EAHDhE,UACAC,EAEC+D,EAFD/D,aACAC,EACC8D,EADD9D,UAEMqL,EAAc,GAEpB,OAAQtL,GACN,IAAK,kBACHqL,EAAQE,IAAOF,MAAM,CAAC1L,EAAYC,IAAc4L,KAAKvL,GACrD,MACF,IAAK,qBACHoL,EAAQ,kBAAME,IAAO/B,UACrB,MACF,IAAK,wBACH6B,EAAQ,SAAA7B,GACN,IAAMiC,EAAMN,KAAKO,MAAe,IAATlC,GACvB,OAAO+B,IAAO5M,IAAI8M,EAAK3L,EAAYC,IAErC,MACF,IAAK,6BACHsL,EAAQ,WACN,YAAmB/J,IAAfzB,GAAkD,IAAtBA,EAAWwB,OAAqB,KACzDxB,EAAWsL,KAAKO,MAAMP,KAAK3B,SAAW3J,EAAWwB,UAM9D,IAAK,IAAIsK,EAAI,EAAGA,EAAItM,EAAcsM,GAAK,EAAG,CACxC,IAAMC,EAAIT,KAAKO,MAAMP,KAAK3B,SAAWjK,GAC/BsM,EAAIV,KAAKO,MAAMP,KAAK3B,SAAWlK,GAC/BwM,EAAOT,EAAMF,KAAK3B,UAClB7D,EAAMgG,EACZL,EAAYS,KAAK,CAAEH,IAAGC,IAAGlG,MAAKmG,SAEhC,OAAOR,EDIEU,CAAS,CACR1M,eACAD,eACAE,cACAI,aACAC,cACAC,aACAC,aACAC,YACAC,eACAC,cACCyF,IAAI,SAAA3B,GAAA,IAAG6H,EAAH7H,EAAG6H,EAAGC,EAAN9H,EAAM8H,EAAGlG,EAAT5B,EAAS4B,IAAKmG,EAAd/H,EAAc+H,KAAd,OACL5H,EAAAC,EAAAC,cAAA,UACE6H,UAAU,MACVC,EACEf,KAAKO,MAAMP,KAAK3B,UAAYpK,EAAe,EAAID,IAC/CA,EAEFwG,IAAKA,EACLwG,GAAIP,EACJQ,GAAIP,EACJC,KAAMA,eAlESrH,aEC7B,SAASuG,KACP,IAAMqB,EAAMC,SAASC,eAAe,WAE9BC,EAAa,IAAIC,eAAmBC,KACpCC,EAAU,IAAIC,KAAK,CAACJ,EAAWK,kBAAkBR,IAAO,CAC5DrL,KAAM,kBAEF8L,EAAMC,IAAIC,gBAAgBL,GAC1BM,EAAOX,SAASlI,cAAc,KACpC6I,EAAKC,KAAOJ,EACZG,EAAKE,SAAW,cAChBF,EAAKG,UAAY,oBAIjBd,SAASe,KAAKC,iBAAiB,QAH/B,WACEhB,SAASC,eAAe,gBAAgBa,UAAY,KAEV,GAC5Cd,SAASC,eAAe,gBAAgBa,UAAY,GACpDd,SAASC,eAAe,gBAAgBgB,YAAYN,GAGtD,IAmCevI,eA5BS,SAAAX,GAAA,IACtBzE,EADsByE,EACtBzE,aACAC,EAFsBwE,EAEtBxE,YACAH,EAHsB2E,EAGtB3E,aACAC,EAJsB0E,EAItB1E,aACAF,EALsB4E,EAKtB5E,aACAQ,EANsBoE,EAMtBpE,WACAG,EAPsBiE,EAOtBjE,WACAD,EARsBkE,EAQtBlE,WACAE,EATsBgE,EAStBhE,UATsB,MAajB,CACLT,eACAC,cACAF,eACAD,eACAD,eACAQ,aACAC,YApBsBmE,EAUtBnE,YAWAC,aACAC,aACAC,YACAC,aAxBsB+D,EAWtB/D,aAcAC,UAzBsB8D,EAYtB9D,YAgBayE,CAnCe,SAAA9B,GAAK,OACjCsB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAACoJ,GAADhM,OAAA2F,OAAA,GAAYvE,EAAZ,CAAmBoI,KAAMA,SCxBvBhG,GAAS,CACbyI,IAAK,CACHvI,OAAQ,KAgBGuI,OAZf,WACE,OACEvJ,EAAAC,EAAAC,cAAA,OAAKoB,MAAOR,GAAOyI,IAAKxB,UAAU,OAChC/H,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,4BAEFF,EAAAC,EAAAC,cAACuG,GAAD,MACAzG,EAAAC,EAAAC,cAACsJ,GAAD,QCLcC,QACW,cAA7BtL,OAAOuL,SAASC,UAEe,UAA7BxL,OAAOuL,SAASC,UAEhBxL,OAAOuL,SAASC,SAASC,MACvB,2DCVNC,IAASC,OACP9J,EAAAC,EAAAC,cAAC6J,EAAA,EAAD,CAAUC,MAAOA,GACfhK,EAAAC,EAAAC,cAAC+J,GAAD,OAEF7B,SAASC,eAAe,SDqHpB,kBAAmB6B,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.3ac3ff7d.chunk.js","sourcesContent":["\nexport const colorModes = {\n  rgb: '',\n  lab: '',\n  lrgb: '',\n  hsl: '',\n  lch: ''\n};\n\nexport const colorHueModes = {\n  'two-point scale': '',\n  'totally-random RGB': '',\n  'controlled-random HSL': '',\n  'choose color from multiple': ''\n};\n\nexport const initialState = {\n  dotRadiusMin: 1,\n  dotRadiusMax: 10,\n  numberOfDots: 500,\n  canvasHeight: 800,\n  canvasWidth: 1000,\n  lineThickness: 1,\n  dotDimensionsPopup: false,\n  canvasDimensionsPopup: false,\n  firstColor: '#000000',\n  secondColor: '#FFFFFF',\n  colorArray: [],\n  saturation: 0.8,\n  lightness: 0.75,\n  colorHueMode: 'two-point scale',\n  colorMode: 'rgb',\n};\n","export const TOGGLE_CANVAS_POPUP = 'TOGGLE_CANVAS_POPUP';\nexport const SET_DOT_DIMENSIONS = 'SET_DOT_DIMENSIONS';\nexport const SET_NUMBER_OF_DOTS = 'SET_NUMBER_OF_DOTS';\nexport const SET_CANVAS_DIMENSIONS = 'SET_CANVAS_DIMENSIONS';\nexport const SET_COLOR = 'SET_COLOR';\nexport const SET_HSL = 'SET_HSL';\nexport const SAVE_IMAGE = 'SAVE_IMAGE';\nexport const SET_COLOR_MODE = 'SET_COLOR_MODE';\nexport const SET_COLOR_HUE_MODE = 'SET_COLOR_HUE_MODE';\nexport const ADD_TO_COLOR_ARRAY = 'ADD_TO_COLOR_ARRAY';\nexport const REMOVE_FROM_COLOR_ARRAY = 'REMOVE_FROM_COLOR_ARRAY';\nexport const EDIT_COLOR_IN_ARRAY = 'EDIT_COLOR_IN_ARRAY';\n\nexport function toggleCanvasDimensionsPopup() {\n  return {\n    type: TOGGLE_CANVAS_POPUP\n  };\n}\n\nexport function setDotDimensions({ dotRadiusMin, dotRadiusMax }) {\n  return {\n    type: SET_DOT_DIMENSIONS,\n    payload: { dotRadiusMin, dotRadiusMax }\n  };\n}\n\nexport function setNumberOfDots({ numberOfDots }) {\n  return {\n    type: SET_NUMBER_OF_DOTS,\n    payload: { numberOfDots }\n  };\n}\n\nexport function setCanvasDimensions(dimensions) {\n  return {\n    type: SET_CANVAS_DIMENSIONS,\n    payload: dimensions\n  };\n}\n\nexport function setColor({ name, color }) {\n  return {\n    type: SET_COLOR,\n    payload: { name, color }\n  };\n}\n\nexport function setHSL({ name, value }) {\n  return {\n    type: SET_HSL,\n    payload: { name, value }\n  };\n}\n\nexport function setColorMode(mode) {\n  return {\n    type: SET_COLOR_MODE,\n    payload: mode\n  };\n}\n\nexport function setColorHueMode(mode) {\n  return {\n    type: SET_COLOR_HUE_MODE,\n    payload: mode\n  };\n}\n\nexport function saveImage() {\n  return { type: SAVE_IMAGE };\n}\n\nexport function addToColorArray(color) {\n  return {\n    type: ADD_TO_COLOR_ARRAY,\n    payload: color\n  };\n}\n\nexport function removeFromColorArray({ index }) {\n  return {\n    type: REMOVE_FROM_COLOR_ARRAY,\n    payload: { index }\n  };\n}\n\nexport function editColorInArray({ index, color }) {\n  return {\n    type: EDIT_COLOR_IN_ARRAY,\n    payload: { index, color }\n  };\n}\n","import { createStore } from 'redux';\nimport reducer from '../reducer';\n\nexport default createStore(\n  reducer /* preloadedState, */,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n","import { initialState } from '../constants/defaults';\nimport {\n  TOGGLE_CANVAS_POPUP,\n  SET_DOT_DIMENSIONS,\n  SET_NUMBER_OF_DOTS,\n  SET_CANVAS_DIMENSIONS,\n  SET_COLOR,\n  SET_COLOR_MODE,\n  SAVE_IMAGE,\n  SET_COLOR_HUE_MODE,\n  SET_HSL,\n  ADD_TO_COLOR_ARRAY,\n  REMOVE_FROM_COLOR_ARRAY,\n  EDIT_COLOR_IN_ARRAY\n} from '../actions';\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case TOGGLE_CANVAS_POPUP:\n      return { ...state, canvasDimensionsPopup: !state.canvasDimensionsPopup };\n    case SET_DOT_DIMENSIONS:\n      return {\n        ...state,\n        dotRadiusMin: action.payload.dotRadiusMin || state.dotRadiusMin,\n        dotRadiusMax: action.payload.dotRadiusMax || state.dotRadiusMax\n      };\n    case SET_NUMBER_OF_DOTS:\n      return {\n        ...state,\n        numberOfDots: action.payload.numberOfDots || state.numberOfDots\n      }\n    case SET_CANVAS_DIMENSIONS:\n      return {\n        ...state,\n        canvasHeight: action.payload.height || state.canvasHeight,\n        canvasWidth: action.payload.width || state.canvasWidth\n      };\n    case SET_COLOR:\n      return { ...state, [action.payload.name]: action.payload.color };\n    case SET_HSL:\n      return { ...state, [action.payload.name]: action.payload.value };\n    case SET_COLOR_MODE:\n      return { ...state, colorMode: action.payload };\n    case SET_COLOR_HUE_MODE:\n      return { ...state, colorHueMode: action.payload };\n    case SAVE_IMAGE:\n      return state;\n    case ADD_TO_COLOR_ARRAY:\n      return { ...state, colorArray: [...state.colorArray, action.payload] };\n    case REMOVE_FROM_COLOR_ARRAY:\n      return {\n        ...state,\n        message: action.payload,\n        colorArray: [\n          ...state.colorArray.slice(0, action.payload.index),\n          ...state.colorArray.slice(action.payload.index + 1)\n        ]\n      };\n    case EDIT_COLOR_IN_ARRAY:\n      return {\n        ...state,\n        colorArray: [\n          ...state.colorArray.slice(0, action.payload.index),\n          action.payload.color,\n          ...state.colorArray.slice(action.payload.index + 1)\n        ]\n      };\n    default:\n      return state;\n  }\n}\n","import styled from 'styled-components';\n\n// eslint-disable-next-line import/prefer-default-export\nexport const StyledForm = styled.form`\n    display: flex;\n    flex-direction: column;\n    width: 200px;\n    justify-content: space-between;\n\n    div {\n        display: flex;\n        margin-bottom: 20px;\n        align-items: center;\n        input {\n            width: 50px;\n            margin-right: 20px;\n        }\n        span {\n            width: 120px;\n        }\n    }\n`;","import React, { Component } from 'react';\nimport { setDotDimensions } from '../../../../actions/index';\nimport { StyledForm } from './styles';\n\nexport default class extends Component {\n  constructor(props) {\n    super(props);\n    const { dotRadiusMin, dotRadiusMax } = this.props;\n    this.state = {\n      formControls: {\n        dotRadiusMin: { value: dotRadiusMin },\n        dotRadiusMax: { value: dotRadiusMax }\n      }\n    };\n  }\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState(prevState => {\n      return {\n        formControls: {\n          ...prevState.formControls,\n          [name]: {\n            ...prevState.formControls[name],\n            value\n          }\n        }\n      };\n    });\n  };\n\n  submitForm = event => {\n    event.preventDefault();\n    const { dispatch } = this.props;\n    const { formControls } = this.state;\n    const dotRadiusMin = parseInt(formControls.dotRadiusMin.value, 10);\n    const dotRadiusMax = parseInt(formControls.dotRadiusMax.value, 10);\n    if (dotRadiusMin > dotRadiusMax)\n    // eslint-disable-next-line no-alert\n      window.alert(\n        'Dot Radius Min must be EQUAL TO or LESS THAN Dot Radius Max'\n      );\n    dispatch(setDotDimensions({ dotRadiusMax, dotRadiusMin }));\n  };\n\n  render() {\n    const { formControls } = this.state;\n    return (\n      <div>\n        <h2>Dot Radius Range</h2>\n        <StyledForm onSubmit={this.submitForm}>\n          <div>\n            <span>Dot Radius Min</span>\n            <input\n              type=\"number\"\n              min=\"0\"\n              step=\"1\"\n              name=\"dotRadiusMin\"\n              value={formControls.dotRadiusMin.value}\n              onChange={this.handleChange}\n            />\n          </div>\n          <div>\n            <span>Dot Radius Max</span>\n            <input\n              type=\"number\"\n              min=\"0\"\n              step=\"1\"\n              name=\"dotRadiusMax\"\n              value={formControls.dotRadiusMax.value}\n              onChange={this.handleChange}\n            />\n          </div>\n          <input type=\"submit\" value=\"Submit\" />\n        </StyledForm>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport DotSelectorAndForm from './DotSelectorAndForms';\n\nconst DotDimensions = props => <DotSelectorAndForm {...props} />;\n\nconst mapStateToProps = ({ dotRadiusMin, dotRadiusMax }) => ({\n  dotRadiusMin,\n  dotRadiusMax\n});\n\nexport default connect(mapStateToProps)(DotDimensions);\n","import styled from 'styled-components';\n\n// eslint-disable-next-line import/prefer-default-export\nexport const StyledForm = styled.form`\n    display: flex;\n    flex-direction: column;\n    width: 380px;\n    justify-content: space-between;\n\n    div {\n        display: flex;\n        margin-bottom: 20px;\n        align-items: center;\n        input {\n            width: 50px;\n            margin-right: 20px;\n        }\n        span {\n            width: 120px;\n        }\n    }\n`;","import React, { Component } from 'react';\nimport { setCanvasDimensions } from '../../../../actions/index';\nimport { StyledForm } from './styles';\n\nexport default class extends Component {\n  constructor(props) {\n    super(props);\n    const { canvasHeight, canvasWidth } = this.props;\n    this.state = {\n      formControls: {\n        canvasHeight: { value: canvasHeight },\n        canvasWidth: { value: canvasWidth }\n      }\n    };\n  }\n\n  handleSelectChange = event => {\n    const { dispatch } = this.props;\n    const { value } = event.target;\n    dispatch(setCanvasDimensions(value));\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState(prevState => {\n      return {\n        formControls: {\n          ...prevState.formControls,\n          [name]: {\n            ...prevState.formControls[name],\n            value\n          }\n        }\n      };\n    });\n  };\n\n\n  submitForm = event => {\n    event.preventDefault();\n    const { dispatch } = this.props;\n    const { formControls } = this.state;\n    const height = parseInt(formControls.canvasHeight.value, 10);\n    const width = parseInt(formControls.canvasWidth.value, 10);\n    dispatch(setCanvasDimensions({ height, width }));\n  };\n\n  render() {\n    const { formControls } = this.state;\n    return (\n      <div>\n        <h2>Canvas Dimensions</h2>\n        <StyledForm onSubmit={this.submitForm}>\n          <div>\n            <span>Canvas Height</span>\n            <input\n              type=\"number\"\n              min=\"0\"\n              step=\"1\"\n              name=\"canvasHeight\"\n              value={formControls.canvasHeight.value}\n              onChange={this.handleChange}\n            />\n          </div>\n          <div>\n            <span>Canvas Width</span>\n            <input\n              type=\"number\"\n              min=\"0\"\n              step=\"1\"  \n              name=\"canvasWidth\"\n              value={formControls.canvasWidth.value}\n              onChange={this.handleChange}\n            />\n          </div>\n          <input type=\"submit\" value=\"Submit\" />\n        </StyledForm>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport CanvasForm from './CanvasForm';\n\nconst CanvasDimensions = props => <CanvasForm {...props} />;\n\nconst mapStateToProps = ({\n  canvasHeight,\n  canvasWidth,\n}) => ({\n  canvasHeight,\n  canvasWidth,\n});\n\nexport default connect(mapStateToProps)(CanvasDimensions);\n","import React from 'react';\n\nconst styles = {\n  select: {\n    margin: 10\n  }\n};\n\nexport default props => {\n  const { handleChange, value, options, disabled, custom = false } = props;\n  return (\n    <select\n      style={styles.select}\n      disabled={disabled}\n      value={value}\n      onChange={handleChange}\n    >\n      {Object.keys(options).map(name => (\n        <option key={name} value={name}>\n          {name}\n        </option>\n      ))}\n      {custom && (\n        <option key=\"custom\" value=\"Custom...\">\n          Custom...\n        </option>\n      )}\n    </select>\n  );\n};\n","import React from 'react';\nimport { colorModes } from '../../../../constants/defaults';\nimport { setColorMode } from '../../../../actions';\nimport Select from '../../../Common/Select';\n\nexport default class Component extends React.Component {\n  handleSelectChange = event => {\n    const { dispatch } = this.props;\n    const { value } = event.target;\n    dispatch(setColorMode(value));\n  };\n\n  render() {\n    const { colorMode, colorHueMode } = this.props;\n    return (\n      <div>\n        Color Scale Method\n        <Select\n          disabled={colorHueMode !== 'two-point scale'}\n          handleChange={this.handleSelectChange}\n          value={colorMode}\n          options={colorModes}\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { colorHueModes } from '../../../../constants/defaults';\nimport { setColorHueMode } from '../../../../actions';\nimport Select from '../../../Common/Select';\n\nconst styles = {\n  container: {\n    marginBottom: 20\n  }\n}\n\nexport default class Component extends React.Component {\n  handleSelectChange = event => {\n    const { dispatch } = this.props;\n    const { value } = event.target;\n    dispatch(setColorHueMode(value));\n  };\n\n  render() {\n    const { colorHueMode } = this.props;\n    return (\n      <div style={styles.container}>\n          Color Mode\n        <Select\n          handleChange={this.handleSelectChange}\n          value={colorHueMode}\n          options={colorHueModes}\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { PhotoshopPicker } from 'react-color';\nimport { setColor } from '../../../../../actions';\n\nconst styles = {\n  container: { marginRight: 20 }\n};\n\nexport default class Component extends React.Component {\n  handleOnChangeComplete = color => {\n    const { colorName, dispatch } = this.props;\n    dispatch(setColor({ name: colorName, color: color.hex }));\n  };\n\n  render() {\n    // eslint-disable-next-line react/destructuring-assignment\n    const color = this.props[this.props.colorName];\n    const { header } = this.props;\n    return (\n      <div style={styles.container}>\n        <PhotoshopPicker\n          header={header}\n          color={color}\n          onChangeComplete={this.handleOnChangeComplete}\n        />\n      </div>\n    );\n  }\n}\n","import 'rc-slider/assets/index.css';\nimport 'rc-tooltip/assets/bootstrap.css';\n\nimport React from 'react';\nimport Slider from 'rc-slider';\nimport Tooltip from 'rc-tooltip';\nimport { setHSL } from '../../../../../actions';\n\nconst { Handle } = Slider;\n\nconst handle = props => {\n  const { value, dragging, index, ...restProps } = props;\n  return (\n    <Tooltip\n      prefixCls=\"rc-slider-tooltip\"\n      overlay={value}\n      visible={dragging}\n      placement=\"top\"\n      key={index}\n    >\n      <Handle value={value} {...restProps} />\n    </Tooltip>\n  );\n};\n\nexport default class extends React.Component {\n  handleOnChangeComplete = value => {\n    const { valueName, dispatch } = this.props;\n    dispatch(setHSL({ name: valueName, value: value / 100 }));\n  };\n\n  render() {\n    // const color = this.props[this.props.colorName];\n    const wrapperStyle = { width: 400, margin: 50 };\n    const { valueName, value } = this.props;\n    return (\n      <div>\n        <h3>{valueName}</h3>\n        <div style={wrapperStyle}>\n          <Slider\n            handle={handle}\n            onAfterChange={this.handleOnChangeComplete}\n            defaultValue={value * 100}\n            min={0}\n            max={100}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { SketchPicker } from 'react-color';\nimport { editColorInArray } from '../../../../../actions';\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      displayColorPicker: false,\n      backgroundColor: ''\n    };\n  }\n\n  componentDidMount() {\n    const { color } = this.props;\n    this.setState({ backgroundColor: color });\n  }\n\n  handleClick = () => {\n    const { displayColorPicker, backgroundColor } = this.state;\n    if (displayColorPicker) {\n      const { index, dispatch } = this.props;\n      dispatch(editColorInArray({ index, color: backgroundColor }));\n    }\n    this.setState(prevState => ({\n      displayColorPicker: !prevState.displayColorPicker\n    }));\n  };\n\n  handleClose = () => {};\n\n  handleOnChangeComplete = color => {\n    this.setState({ backgroundColor: color.hex });\n  };\n\n  render() {\n    const { backgroundColor } = this.state;\n    const styles = {\n      color: {\n        width: '36px',\n        height: '14px',\n        borderRadius: '2px',\n        background: backgroundColor\n      },\n      swatch: {\n        padding: '5px',\n        background: '#fff',\n        borderRadius: '1px',\n        boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\n        display: 'inline-block',\n        cursor: 'pointer'\n      },\n      popover: {\n        position: 'absolute',\n        zIndex: '2'\n      },\n      cover: {\n        position: 'fixed',\n        top: '0px',\n        right: '0px',\n        bottom: '0px',\n        left: '0px'\n      }\n    };\n    const { displayColorPicker } = this.state;\n\n    return (\n      <div>\n        <button type=\"submit\" style={styles.swatch} onClick={this.handleClick}>\n          <div style={styles.color} />\n        </button>\n        {displayColorPicker ? (\n          <div style={styles.popover}>\n            <button\n              type=\"submit\"\n              style={styles.cover}\n              onClick={this.handleClose}\n            />\n            <SketchPicker\n              color={backgroundColor}\n              onChangeComplete={this.handleOnChangeComplete}\n            />\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\n// export default class Component extends React.Component {\n//   render() {\n//     // eslint-disable-next-line react/destructuring-assignment\n//     const color = this.props[this.props.colorName];\n//     const { header } = this.props;\n//     return (\n//       <StyledPhotoshopPickerDivContainer>\n//         <PhotoshopPicker\n//           header={header}\n//           color={color}\n//           onChangeComplete={this.handleOnChangeComplete}\n//         />\n//       </StyledPhotoshopPickerDivContainer>\n//     );\n//   }\n// }\n","/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport { random } from 'chroma-js';\nimport { connect } from 'react-redux';\nimport ColorPicker from './ColorPicker';\nimport ColorSlide from './ColorSlide';\nimport CustomColorPicker from './CustomColorPicker';\nimport { removeFromColorArray, addToColorArray } from '../../../../actions';\n// import styles from './styles'\n\nclass ColorPickersContainer extends React.Component {\n  removeHandler = ({ index }) => {\n    const { dispatch } = this.props;\n    dispatch(removeFromColorArray({ index }));\n  };\n\n  handleAdd = () => {\n    const { dispatch } = this.props;\n    dispatch(addToColorArray(random()));\n  };\n\n  render() {\n    const { colorHueMode, saturation, lightness, colorArray } = this.props;\n    return (\n      <div>\n        <h2>Colors</h2>\n        {colorHueMode === 'two-point scale' && (\n          <div style={{ display: 'flex' }}>\n            <ColorPicker\n              colorName=\"firstColor\"\n              header=\"First Color\"\n              {...this.props}\n            />\n            <ColorPicker\n              colorName=\"secondColor\"\n              header=\"Second Color\"\n              {...this.props}\n            />\n          </div>\n        )}\n        {colorHueMode === 'totally-random RGB' && (\n          <p>No color values to select. Random rgb values generated.</p>\n        )}\n        {colorHueMode === 'controlled-random HSL' && (\n          <div style={{ display: 'flex' }}>\n            <ColorSlide\n              value={saturation}\n              valueName=\"saturation\"\n              {...this.props}\n            />\n            <ColorSlide\n              value={lightness}\n              valueName=\"lightness\"\n              {...this.props}\n            />\n          </div>\n        )}\n        {colorHueMode === 'choose color from multiple' && (\n          <div style={{ maxWidth: 800 }}>\n            <span>Click on color box to edit, click again to save.</span>\n            <div\n              style={{\n                display: 'grid',\n                gridTemplateColumns: 'repeat(auto-fill, minmax(52px, 1fr))',\n                gridColumnGap: 0,\n                gridRowGap: 15\n              }}\n            >\n              <button\n                style={{ marginRight: 5, borderRadius: 5 }}\n                type=\"submit\"\n                onClick={this.handleAdd}\n              >\n                Add Color\n              </button>\n              {colorArray.map((color, index) => {\n                return (\n                  <div key={index + color}>\n                    <CustomColorPicker\n                      index={index}\n                      key={index + color}\n                      color={color}\n                      {...this.props}\n                    />\n                    <button\n                      type=\"submit\"\n                      onClick={() => this.removeHandler({ index })}\n                    >\n                      delete\n                    </button>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  firstColor,\n  secondColor,\n  colorMode,\n  colorHueMode\n}) => ({\n  firstColor,\n  secondColor,\n  colorMode,\n  colorHueMode\n});\n\nexport default connect(mapStateToProps)(ColorPickersContainer);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport ColorModeSelector from './ColorModeSelector';\nimport ColorHueModeSelector from './ColorHueModeSelector';\nimport ColorPickersOptions from './ColorPickersOptions';\n\nconst ColorPickersContainer = props => (\n  <div>\n    <h2>Colors</h2>\n    <ColorHueModeSelector {...props} />\n    <ColorModeSelector {...props} />\n    <ColorPickersOptions {...props} />\n  </div>\n);\n\nconst mapStateToProps = ({\n  firstColor,\n  secondColor,\n  saturation,\n  lightness,\n  colorArray,\n  colorMode,\n  colorHueMode\n}) => ({\n  firstColor,\n  secondColor,\n  saturation,\n  lightness,\n  colorArray,\n  colorMode,\n  colorHueMode\n});\n\nexport default connect(mapStateToProps)(ColorPickersContainer);\n","import styled from 'styled-components';\n\n// eslint-disable-next-line import/prefer-default-export\nexport const StyledForm = styled.form`\n    display: flex;\n    flex-direction: column;\n    width: 250px;\n    justify-content: space-between;\n\n    div {\n        display: flex;\n        margin-bottom: 20px;\n        align-items: center;\n        input {\n            width: 90px;\n            margin-right: 20px;\n        }\n        span {\n            width: 120px;\n        }\n    }\n`;","import React, { Component } from 'react';\nimport { setNumberOfDots } from '../../../actions/index';\nimport { StyledForm } from './styles';\n\nexport default class extends Component {\n  constructor(props) {\n    super(props);\n    const { numberOfDots } = this.props;\n    console.log(numberOfDots);\n    this.state = { numberOfDots };\n  }\n\n  handleChange = event => {\n    const { value } = event.target;\n    this.setState({ numberOfDots: value });\n  };\n\n  submitForm = event => {\n    event.preventDefault();\n    const { dispatch } = this.props;\n    const { numberOfDots } = this.state;\n    dispatch(setNumberOfDots({ numberOfDots: parseInt(numberOfDots, 10) }));\n  };\n\n  render() {\n    const { numberOfDots } = this.state;\n    return (\n      <div>\n        <h2>Number of Dots</h2>\n        <StyledForm onSubmit={this.submitForm}>\n          <div>\n            <span>Number of Dots </span>\n            <input\n              type=\"number\"\n              min=\"0\"\n              step=\"1\"\n              name=\"numberOfDots\"\n              value={numberOfDots}\n              onChange={this.handleChange}\n            />\n          </div>\n          <input type=\"submit\" value=\"Submit\" />\n        </StyledForm>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport NumberOfDots from './NumberOfDots';\n\nconst NumberOfDotsContainer = props => <NumberOfDots {...props} />;\n\nconst mapStateToProps = ({ numberOfDots }) => ({\n  numberOfDots\n});\n\nexport default connect(mapStateToProps)(NumberOfDotsContainer);\n","import React from 'react';\nimport DotDimensions from './DotDimensions';\nimport CanvasDimensions from './CanvasDimensions';\nimport ColorPickersContainer from './ColorPickersContainer';\nimport NumberOfDots from './NumberOfDots';\n\nexport default () => (\n  <div>\n    <NumberOfDots />\n    <DotDimensions />\n    <CanvasDimensions />\n    <ColorPickersContainer />\n  </div>\n);\n","/* eslint-disable react/no-unused-state */\nimport React, { Component } from 'react';\nimport dotLayer from '../../../helpers/dotLayer';\n\nexport default class extends Component {\n  render() {\n    const {\n      dotRadiusMax,\n      dotRadiusMin,\n      numberOfDots,\n      firstColor,\n      saturation,\n      colorArray,\n      lightness,\n      secondColor,\n      colorMode,\n      canvasHeight,\n      canvasWidth,\n      colorHueMode,\n      save\n    } = this.props;\n    return (\n      <div>\n        <button type=\"submit\" onClick={save}>\n          Generate Download Link\n        </button>\n        <span id=\"download-div\" />\n        <div id=\"stats\">\n          <p>\n            Actual Canvas Dimensions: {canvasWidth} x {canvasHeight} height\n          </p>\n          <p>\n            Dot Radius Range: {dotRadiusMin} – {dotRadiusMax} px\n          </p>\n          <button\n            id=\"refresh\"\n            style={{ marginBottom: 30 }}\n            type=\"submit\"\n            onClick={() => this.setState({ _: Math.random() })}\n          >\n            Refresh\n          </button>\n        </div>\n        <svg\n          id=\"dotwall\"\n          width={canvasWidth}\n          height={canvasHeight}\n          preserveAspectRatio=\"xMinYMax meet\"\n        >\n          {dotLayer({\n            canvasHeight,\n            numberOfDots,\n            canvasWidth,\n            firstColor,\n            secondColor,\n            colorArray,\n            saturation,\n            lightness,\n            colorHueMode,\n            colorMode\n          }).map(({ x, y, key, fill }) => (\n            <circle\n              className=\"dot\"\n              r={\n                Math.floor(Math.random() * (dotRadiusMax + 1 - dotRadiusMin)) +\n                dotRadiusMin\n              }\n              key={key}\n              cx={x}\n              cy={y}\n              fill={fill}\n            />\n          ))}\n        </svg>\n      </div>\n    );\n  }\n}\n","import chroma from 'chroma-js';\n\nexport default function dotLayer({\n  canvasHeight,\n  canvasWidth,\n  numberOfDots,\n  firstColor,\n  secondColor,\n  colorArray,\n  saturation,\n  lightness,\n  colorHueMode,\n  colorMode\n}) {\n  const coordinates = [];\n  let scale;\n  switch (colorHueMode) {\n    case 'two-point scale':\n      scale = chroma.scale([firstColor, secondColor]).mode(colorMode);\n      break;\n    case 'totally-random RGB':\n      scale = () => chroma.random();\n      break;\n    case 'controlled-random HSL':\n      scale = random => {\n        const hue = Math.floor(random * 360);\n        return chroma.hsl(hue, saturation, lightness);\n      };\n      break;\n    case 'choose color from multiple':\n      scale = () => {\n        if (colorArray === undefined || colorArray.length === 0) return null;\n        return colorArray[Math.floor(Math.random() * colorArray.length)];\n      };\n      break;\n    default:\n      break;\n  }\n  for (let i = 0; i < numberOfDots; i += 1) {\n    const x = Math.floor(Math.random() * canvasWidth);\n    const y = Math.floor(Math.random() * canvasHeight);\n    const fill = scale(Math.random());\n    const key = i;\n    coordinates.push({ x, y, key, fill });\n  }\n  return coordinates;\n}\n","import React from 'react';\nimport xmlserializer from 'xmlserializer';\nimport { connect } from 'react-redux';\nimport Canvas from './Canvas';\n\nfunction save() {\n  const svg = document.getElementById('dotwall');\n  // eslint-disable-next-line no-undef\n  const serializer = new XMLSerializer() || xmlserializer;\n  const svgBlob = new Blob([serializer.serializeToString(svg)], {\n    type: 'image/svg+xml'\n  });\n  const url = URL.createObjectURL(svgBlob);\n  const link = document.createElement('a');\n  link.href = url;\n  link.download = 'dotwall.svg';\n  link.innerHTML = 'Click to download';\n  function fn() {\n    document.getElementById('download-div').innerHTML = '';\n  }\n  document.body.addEventListener('click', fn, true);\n  document.getElementById('download-div').innerHTML = '';\n  document.getElementById('download-div').appendChild(link);\n}\n\nconst ColorPickersContainer = props => (\n  <div>\n    <h2>Canvas</h2>\n    <Canvas {...props} save={save} />\n  </div>\n);\n\nconst mapStateToProps = ({\n  canvasHeight,\n  canvasWidth,\n  dotRadiusMax,\n  numberOfDots,\n  dotRadiusMin,\n  firstColor,\n  saturation,\n  colorArray,\n  lightness,\n  secondColor,\n  colorHueMode,\n  colorMode\n}) => ({\n  canvasHeight,\n  canvasWidth,\n  numberOfDots,\n  dotRadiusMax,\n  dotRadiusMin,\n  firstColor,\n  secondColor,\n  colorArray,\n  saturation,\n  lightness,\n  colorHueMode,\n  colorMode\n});\n\nexport default connect(mapStateToProps)(ColorPickersContainer);\n","import React from 'react';\nimport Interface from './components/Interface';\nimport CanvasContainer from './components/CanvasContainer';\n\nconst styles = {\n  App: {\n    margin: 15\n  }\n};\n\nfunction App() {\n  return (\n    <div style={styles.App} className=\"App\">\n      <header>\n        <h1>Dot Generator</h1>\n      </header>\n      <Interface />\n      <CanvasContainer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\nimport './styles/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}